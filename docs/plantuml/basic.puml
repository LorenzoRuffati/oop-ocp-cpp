'https://www.planttext.com/?text=bLF1JiCm3BtdAtn2dKf_O9ecq2Ga3XCm3XmGgjBKQoErJKdSGHdyEsxJZcu849SgjL-Udv-T2qVIKbCMa4Yd5QX2EeTE2D9K8Ap246vMjqB8n96LYZm0BXKP2ti14EgA05zHDOJ1zUtgR2O-li4vteFtO_m3GgVVC2P8ckqsxix1x0Immwx88ca9bs1HeTvXu6-TGWSkXrKQJA-TuX9Z2gQIQHlqCeMNTvzBY-aQopq7AqC8PEevt2CVSWJNfw74qjWMN8rARzcgLClCodBWMDzjcBVl4Y2g9ULpuBgwodoawnFj7ARoV8QQki05jJMU7sMNa2759JedC-yEWpktXv2BNwGcBZ3aGYyXM2Fb9Zs7ZIcOyQQcIvkvVYoZqWUhkSV_Ims7gx-KE5W9KVI-x0Ol1cSc_xx-8J1EWQU7Tg8grjL1s2X-u_VW26OQck0yZMVlrrICTwOnCTdZAzbzMx-X_1v8AzwLfjBF3SOrsKMFMeBYpU7cV_ALM_cJYJ5-hBfMlxWeZdH5ZxbEKwoU1ksJGb-f8sV7Q3IifRXWK_YHVm80
@startuml basic classes

title C++ OCP

abstract class Actor {
  +int execute(IPC&)
}

abstract class IPC {
  {abstract} +size_t buff_size()
  {abstract} +vector<byte> receive(size_t)
  {abstract} +size_t send(vector<byte>)
  {abstract} +bool ready()
}


class SharedMem{
}
note top: See the shared memory specific diagram
class MQRead {
    -path: string
    -buffer: vector<byte>
    -tuple<type, vector<byte>> get_message()
    -int messages_waiting()
    +MQRead(Method, Role, OptArgs&)
}
class MQWrite {
    -path: string
    -buffer: vector<byte>
    +MQWrite(Method, Role, OptArgs&)
}
SharedMem --|> IPC
MQRead --|> IPC
MQWrite --|> IPC

class Sender{
    -path_in: string
}
class Receiver{
    -path_out: string
}
Sender --|> Actor
Receiver --|> Actor

class ActorFactory {
  {static} +unique_ptr<Actor> create(Role, OptArgs&)
}
class IPCFactory {
  {static} +unique_ptr<IPC> get_ipc(Method, Role, OptArgs&)
}

ActorFactory -[hidden] Actor
IPCFactory -[hidden] IPC
MQWrite -[hidden]- MQRead
@enduml